plugins {
    id 'java-library'
    id "org.openapi.generator" version "4.2.3" apply false
    id "org.springframework.boot" version "2.2.6.RELEASE"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
}

group 'net.iceburg'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    retrofitVersion = "2.5.0"
    springFoxVersion = "2.9.2"

    libs = [

            openApiClient : [
                    "org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:1.0.1",
                    "com.google.code.findbugs:jsr305:3.0.2",
                    "com.squareup.retrofit2:converter-gson:$retrofitVersion",
                    "com.squareup.retrofit2:converter-scalars:$retrofitVersion",
                    "com.squareup.retrofit2:retrofit:$retrofitVersion",
                    "io.gsonfire:gson-fire:1.8.3"
            ],
            openApiServer : [
                    "org.openapitools:jackson-databind-nullable:0.1.0"
            ],
            springBoot : [
                    "org.springframework.boot:spring-boot-starter",
                    "org.springframework.boot:spring-boot-starter-web"
            ],
            swagger : [
                    "io.springfox:springfox-swagger2:$springFoxVersion",
                    "io.springfox:springfox-swagger-ui:$springFoxVersion"
            ]
    ]
}

dependencies {
    api libs.springBoot
    api libs.openApiClient
    api libs.openApiServer
    api libs.swagger
}

def skytaleApiClientOutput = "$buildDir/generated/openapi-code-client"
def skytaleApiServerOutput = "$buildDir/generated/openapi-code-server"

task generateSkytaleApiClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {

    generatorName = "java"
    inputSpec = "$projectDir/src/main/resources/openapi/skytale-api.yml"
    outputDir = skytaleApiClientOutput

    apiPackage = "net.iceburg.skytale.openapi.client.api"
    modelPackage = "net.iceburg.skytale.openapi.client.model"

    configOptions = [
            "dateLibrary": "java8",
            "library": "retrofit2"
    ]
}

task generateSkyTaleApiServer(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {

    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/openapi/skytale-api.yml"
    outputDir = skytaleApiServerOutput

    apiPackage = "net.iceburg.skytale.openapi.server.api"
    modelPackage = "net.iceburg.skytale.openapi.server.model"

    configOptions = [
            "dateLibrary": "java8",
            "hideGenerationTimestamp": "true",
            "interfaceOnly": "true",
            "java8": "true",
            "performBeanValidation": "false",
            "serializableModel": "true",
            "useBeanValidation": "true",
            "useOptional": "true"
    ]
}

sourceSets.main.java.srcDir "$skytaleApiClientOutput/src/main/java"
sourceSets.main.java.srcDir "$skytaleApiServerOutput/src/main/java"

compileJava {
    dependsOn 'generateSkyTaleApiServer','generateSkytaleApiClient'
}
